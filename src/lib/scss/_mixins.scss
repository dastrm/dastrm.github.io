@use 'sass:color';
@use 'sass:meta';

@import './_breakpoints.scss';
@import './_functions.scss';

@mixin padded-container {
	width: 100%;
	padding-right: 15px;
	padding-left: 15px;
	margin-right: auto;
	margin-left: auto;

	@include for-iphone-se {
		padding-left: 0;
		padding-right: 0;
	}

	@include for-tablet-portrait-up {
		padding-right: 20px;
		padding-left: 20px;
	}

	@include for-tablet-landscape-up {
		padding-right: 30px;
		padding-left: 30px;
	}

	@include for-desktop-up {
		max-width: 1080px;
	}
}

@mixin define-color($title, $color) {
	--color--#{$title}: #{$color};

	// convert to HSL for individual channels
	$hsl: color.to-space($color, hsl);

	--color--#{$title}-h: #{color.channel($hsl, "hue")};
	--color--#{$title}-s: #{color.channel($hsl, "saturation")};
	--color--#{$title}-l: #{color.channel($hsl, "lightness")};
	--color--#{$title}-a: #{color.channel($color, "alpha", $space: rgb)};

	// get RGB values
	$rgb: color.to-space($color, rgb);
	--color--#{$title}-rgb: #{color.channel($rgb, "red")},
	#{color.channel($rgb, "green")},
	#{color.channel($rgb, "blue")};

	// calculate contrast using luminance
	$luminance: luminance($color);
	--color--#{$title}-contrast: #{if($luminance > 0.6, var(--color--text), var(--color--text-inverse))};
}
